import * as v3 from './v3';
declare const AlertPolicyServiceClient: typeof v3.AlertPolicyServiceClient;
type AlertPolicyServiceClient = v3.AlertPolicyServiceClient;
declare const GroupServiceClient: typeof v3.GroupServiceClient;
type GroupServiceClient = v3.GroupServiceClient;
declare const MetricServiceClient: typeof v3.MetricServiceClient;
type MetricServiceClient = v3.MetricServiceClient;
declare const NotificationChannelServiceClient: typeof v3.NotificationChannelServiceClient;
type NotificationChannelServiceClient = v3.NotificationChannelServiceClient;
declare const QueryServiceClient: typeof v3.QueryServiceClient;
type QueryServiceClient = v3.QueryServiceClient;
declare const ServiceMonitoringServiceClient: typeof v3.ServiceMonitoringServiceClient;
type ServiceMonitoringServiceClient = v3.ServiceMonitoringServiceClient;
declare const SnoozeServiceClient: typeof v3.SnoozeServiceClient;
type SnoozeServiceClient = v3.SnoozeServiceClient;
declare const UptimeCheckServiceClient: typeof v3.UptimeCheckServiceClient;
type UptimeCheckServiceClient = v3.UptimeCheckServiceClient;
export { v3, AlertPolicyServiceClient, GroupServiceClient, MetricServiceClient, NotificationChannelServiceClient, QueryServiceClient, ServiceMonitoringServiceClient, SnoozeServiceClient, UptimeCheckServiceClient };
declare const _default: {
    v3: typeof v3;
    AlertPolicyServiceClient: typeof v3.AlertPolicyServiceClient;
    GroupServiceClient: typeof v3.GroupServiceClient;
    MetricServiceClient: typeof v3.MetricServiceClient;
    NotificationChannelServiceClient: typeof v3.NotificationChannelServiceClient;
    QueryServiceClient: typeof v3.QueryServiceClient;
    ServiceMonitoringServiceClient: typeof v3.ServiceMonitoringServiceClient;
    SnoozeServiceClient: typeof v3.SnoozeServiceClient;
    UptimeCheckServiceClient: typeof v3.UptimeCheckServiceClient;
};
export default _default;
import * as protos from '../protos/protos';
export { protos };
